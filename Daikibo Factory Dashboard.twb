<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.09ppues0i9xv8319uyy2a0dvtoic' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.13tbnyb1ijvxq818c397u1bppfcy'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/RAHMAH/Downloads' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.13tbnyb1ijvxq818c397u1bppfcy' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_1282118543887147009]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/RAHMAH/AppData/Local/Temp/TableauTemp/#TableauTemp_1duve6308mvdzj1bbobzg1w2jnat.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/26/2025 08:31:13 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6219</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_16315011A0D445ADBBABCFF59B2599BB'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.13tbnyb1ijvxq818c397u1bppfcy' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_3E39A4B0B2974179B8C24A37AF08E4D2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.09ppues0i9xv8319uyy2a0dvtoic' />
          </datasources>
          <datasource-dependencies datasource='federated.09ppues0i9xv8319uyy2a0dvtoic'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1282118543887147009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1282118543887147009]' derivation='Sum' name='[sum:Calculation_1282118543887147009:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:factory:nk]' value='41' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:factory:nk]' value='223' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='892' />
                <format attr='maxwidth' value='892' />
                <format attr='minheight' value='472' />
                <format attr='maxheight' value='472' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='892' />
                <format attr='maxwidth' value='892' />
                <format attr='minheight' value='472' />
                <format attr='maxheight' value='472' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ppues0i9xv8319uyy2a0dvtoic].[sum:Calculation_1282118543887147009:qk]</rows>
        <cols>[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{4BF5BAB1-CE45-44B0-8CED-90772DFBA4CC}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.09ppues0i9xv8319uyy2a0dvtoic' />
          </datasources>
          <datasource-dependencies datasource='federated.09ppues0i9xv8319uyy2a0dvtoic'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_1282118543887147009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF[status]=&quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1282118543887147009]' derivation='Sum' name='[sum:Calculation_1282118543887147009:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09ppues0i9xv8319uyy2a0dvtoic].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-shenzhen&quot;' user:ui-action-filter='[Action1_3E39A4B0B2974179B8C24A37AF08E4D2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09ppues0i9xv8319uyy2a0dvtoic].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:deviceType:nk]' value='161' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:deviceType:nk]' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09ppues0i9xv8319uyy2a0dvtoic].[sum:Calculation_1282118543887147009:qk]</rows>
        <cols>[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{AA7CCCD5-4E7F-4C69-BCB9-88DBBB653559}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='650' minheight='560' minwidth='420' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='52369' id='3' name='Sheet 1' w='97538' x='1231' y='998'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='45635' id='5' name='Sheet 2' w='97538' x='1231' y='53367'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98004' id='6' param='vert' type-v2='layout-flow' w='97538' x='1231' y='998'>
                <zone fixed-size='280' h='52369' id='3' is-fixed='true' name='Sheet 1' w='97538' x='1231' y='998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45635' id='5' is-fixed='true' name='Sheet 2' w='97538' x='1231' y='53367'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E8B17CFB-6ED6-4AE5-BA81-8EC124C28E97}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{F9152953-AC4B-43E0-B2C0-4B49154FED86}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C49D63A8-696E-4869-BBD9-4EFBE720F5EF}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1B5F3C6-4DDD-4604-AD05-52F22B5D513C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:factory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.09ppues0i9xv8319uyy2a0dvtoic].[sum:Calculation_1282118543887147009:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.09ppues0i9xv8319uyy2a0dvtoic].[none:factory:nk]</field>
                    <field>[federated.09ppues0i9xv8319uyy2a0dvtoic].[sum:Calculation_1282118543887147009:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;daikibo-shenzhen&quot;</value>
                  <value>420</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{21F54F87-E4B9-4458-9440-95FAE6FABD8F}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F4B2F6A0-A659-4ECF-A79A-9BEB6E17C08D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3deYwk12Hf8W8dXX33THdPz/TM9Jw7u5y9yBVvkTIlKLIgi5TjwHDsALET
      JAES588Y+St/JH/kjwRBkBgBggRKDMSO7MhwdIcUaZoyJVMSKZLLY8+57+mZnr6v6rpe/pjl
      7DXb3B3Nsbv9PiCB7avqVXf95lXVe6+eIoQQSFIHUhRFUY+6EJJ0lGQApI4mAyB1NBkAqaPJ
      AEgdTQZA6mi3BUB4LvV6nabZQghBbmONlu3uw6oElmXtw3Ikaf/cHADh8oP/+2e8/saP+P53
      /oLZ9Qofv/82pYZzTwv9+c9/xo2NC67d5NXv/AX/5j/+130osiTtH/2mR26djZqPf/JbLwEg
      hGDpvMVP3vghPsVl7PTTnD2W5sd/9RqNls3oo89xcjjJW2+8RqXpkHnkHN1egW9/61vMLyzz
      wq/+GoPJKELAEy98mWLrlaPYRkm6o5trAD3Kc2f6+G///eu88sZPcTwBAs599gv8+le/xMUP
      z7P08VuofWf5yotf4/xPXiN79W0a0Qm+8tWv8uHP3yRz/CyPP/E4v/3bv8VAIrK9WCNIT6Lr
      KLZPktq6uQZA4dRTX+Dkky9w9e3XePXnVwhpBtFgAEW1UFHYWF9ntlKhtnoBI9DNejbLwuom
      P9yaRvWFcRUFUEBRUI5kkyTp7t1cA7QqvPr6X7O5VaBUNemKhm77wLGTp9F1P88++wwjw/2M
      T55BV1Se/eyzjI4NoQOi1SC3VaTZsgGwzTqLi4sUCkUWFxepm/ZhbJskfSrl1s5wubVF5pbX
      6U4NcmJsiHJxi1AsgaEJclslUqkE60uzLK3nGT42SX9PF5urC8ytbDA4MsFQOkmtuMkHF6Y5
      8/iTdIf9tGpFLk7N76xj7MRp4hH/oW+sJN1IURTltgBIUqeQvUGljicDIHU0GQCpo8kASB1N
      BuC+4LG6tMD8wjK397oSuO5+9MWSdqN/+lukg2fy/W+/zFMvfJ6QscClq4t85plnWZ36CNcX
      4JXvvcw//mf/lEsfvMfw5DnUVolyqUIo3keX3yPQnSYSkD/lXsga4D5hmQ1K1Rr1aoVmYZFX
      X3mVmZzH8bER0oODzP3iRySPn+Nnb77Bj//yh4SSad7+mzd555130XTtqIv/wJIBuC8oDB47
      yd964RmmLl4Ef5BINEElO83VhU0iqonRleTjt99Cj8RJDoxybKifz4xG2RAJgrrsdLJXsiHs
      PiOEhydAU1WE5yFQuPYfnuuiahqKsr3Dv/Xad8g88WVGkrd3WZE+3YG2BLuui+d5Oz+WJB01
      VVVR1esHPYqiKHs8cxKYzSZC0Qj4fdRqdcKRCJ5j0bIF4VAAVVURQqBp8vhUun/tqQYQdoUP
      Lq0xNJSmWdyghYqnhbDKm6iqyuCxU3SFfLiuKwMg3bf23BfIc8BvQHZjC9NRGB8fh1YBI9DD
      yECaWr2+32WVpAOxp0MgV9VJJhKsr6zhjxisr6/jqhHseoH1nEZ88Ph+l1O6xVquhGXf21jt
      /TKcTqKqD8e53Z4C4PP5MXxNjk0+QiSgUyhV6euL47QamI6gKyr7+h80s2VjWkc1sEjAQzLe
      b08BUFSNeCK58ziZTGwvLBQmsD/lkqRDIRvCpI4mAyB1NBkAqaPJAEgdTQZA6mgyAFJHkwGQ
      OpocRiQdiPPnz/Ov/vW/RTeCR7L+sUyKP/zP/+lT3ycDIB2IYrFIThti4MSzR7L+qcvfvav3
      7fkQSAiPVstCCI9arYYnBI5t0Wi29rpISTp0e64BNpbnmMnWGekJYHoq6CFa5U0URSUzsd0d
      WpLud3sKgNUoU2xpRP0qpq1w7MQ4M1OXMAI9DPQYlOt1Iv4orusiR1wejKP8Xh3HRVW9tu85
      6lu5CCFwnJt7y946Igz2GADH9QgZKtm1MqHeONlsdqc79EZOo3vw+M5AGDkg5mAc5VBTXddu
      25FuddS/u6Io6Pqn7957CkAoGmck0k063Y+hK+SLFY6PD+C06jRtQbfsDi09IPZ+FUhR8PsN
      AHp6trtG66GI7A4tPVBkQ5jU0WQApI4mAyB1NBkAqaPJAEgdTQZA6mgyAFJHkwGQOpoMgNTR
      ZACkjiYDIHW0tgEQrsVP3nyDrVJNdmuWHkptA6CoPiYnhvkff/jv+KNv/AWbpQYArmMxNzPF
      8noOu1nj8uUr1E2bwuYqM3NLeDIr0gOibW9Q4Tlcnlrgd3//D0hFFIqN7QEGiqKQGRnn8sWL
      NEo+xsZGmV+cx7MFvXEfuVKDvrict0q6/7UNgOc6zExdZjWb47FnPs+p8QEAVM3H5tIULjqe
      omH4/ajCQtWjBPwGFcfGdV05IuwAyRFh7e3DiDCXn//4R5Sagv7hbvzG9TG+Zr1M3QJNEXRH
      /Fy+dIVoop9mYZWFdTj2yBk0bXtFRz0y6GElR4S1tw8jwlTOPvEMfeOnSMYj1BrXEx0Id3Hi
      RGxnRelBgaIoiHRi5zlJehC0CYDC5vI033vzfU5PDKBGxhga7Lv+6g07+Sf/lju+9KBpEwCP
      piWYGBsh1p1g5PjI4ZVKkg5J2wO5ULSL7rBBNpulVpc3vJIePm0CoDI6OszizAVaQrC4vH54
      pZKkQ9K2BlB1g8ef+xLduiAWDR9WmSTp0LRvCBMCVfEYGj+LEZS3OpQePu37AnkOH33wC/76
      tR+ynJOzv0sPn7Y1gOoL8tiZz7CRaXB8InNYZZKkQ9O2BvCsBu9dnKI/3UfAJ6cSkB4+bQLg
      8PorL1Ov1njvvffI5suHVypJOiRtAqDzqy/9Br3d8m6f0sOr/XGN5+BoYT779ON098QPqUiS
      dHjangNUqjW6gjofX7hEtWHe8IrAaplYtoMQHo1GA08IXMfGbFkHXGRJ2j9ta4C15QV8oRhu
      Pc+V6RWGerdrAadlsrK6TrlUJd4dpOUIVCNKq5wFVIZOnKZLthtID4C2ATD8foJBAZZGzb4+
      uED3B+gKGzTtKLbtcPzExLUpklLbUyTV6kQMOUXSQZIDYtrblymSol0JVL+NnhlhaDC983yr
      kmNqOc/ksVEKm6tsbm7iqmHsepHNvEZX/4ScIumAyQEx7e3LFEl9A0O7fyjYxcQwuJ7H6MRx
      8vkSE+NjOGaNpi2IyymSpAfEnlq3NJ+fVG/vzuPe3hQAvnCUo5kXXJL2Rt4YS+poMgBSR5MB
      kDqaDIDU0WQApI4mAyB1NBkAqaPJAEgdTQZA6mgyAFJHkwGQOpoc6b6Lo+7CLW8yfHj2FADh
      OcxcPE90+Bwhe4v5tRzpzBjNwiqVpsfkqZMY2oP7I5ZrTdZypSNZdyoeJRWPHsm6O9HeagAB
      qXiYLcujmq9w5swpZqanECLIaNpgq1ijLx7C87wj/2u6F57XfrDHQa/71oEcuznSATGui/op
      39FRfocAQvDLD4i5E0XT8V+7T5AQHkJ42xPjee72huvbKxNCHPnAiL34tMEeB0lRlLv7zo6w
      gtVUDVVtX4Cj/A4BFOXuBuXsKQBOq8HiZg1TW2K8P8XU1CzpwTGaxXU2yi2OTURQFGXnf+nu
      3e13phxhAhTlwThPuZsy7ikAuj/E5NnHdx6fivds/yM2vpfFSdKRkZdBpY4mAyB1NBkAqaPJ
      AEgdTQZA6mgyAFJHkwGQOpoMgNTRZACkjravAaiX8yytbfIA9n+TOtQ+jgdwmVvMkoz5yFdj
      9MR2n1rJdT3cI+opqGu39waUOts+BsDCMGLEogbllgnsHoBCpU6uWN2/1d6DwVQ3XdHQkaxb
      uj/t45/DAFZzk7nlVWLRyP4tVpIO0D7WAApnzj2OEEIeZkgANCpbVDaXjmTdPse+q/ft65jg
      G/uyu6676zQ5Qb9OKn40NYTPp91WJiHEbf3GDZ92ZGUM+vW7KmM8GsTxjmYikt1G+t1axomJ
      CX7/7zx72EXbkU7/zq77362DZBRxgGPrXNe970eEyTLujwexjIqiKAd6rPJpX4gQglvTd2Me
      hRB3HPva9jXPu+tLsZ+UcXt57cvX7m+F69gHdnXrpjLe8tq9lNG2rAMbS3zzb73bbyN2+W3b
      L/Nu3vPJ++69jNuO5mBdCBzbYmZqBs91MVsthOeRy+eZnZtHeB6NSpFqw2R2bhb72nzEpmni
      XdvY+YU5TLOFJwSObWPbDp7n4ToOs9OXMc06hXIDx7FpWe3nLvY8l+raFVar2/MfO65HcSvH
      xswcVSHwPI/cVo7ZuZntsiKwrRbOtSrWcx3ef+8XNExrp4yu62BZNqsrK9iOi+vYWJaNENtl
      3PnstdB4nkvLNLEtC9u5vep2HJuFq9NYN3wPudwWi7PzuEJgtxoUyzVmZqZoWTZCCFotE9fb
      /r5alU3e/+gKluNitraDYNsWtm2zvLKC63o7694emG/jutuHOp4ngO3fzLIdhOfSau0epu31
      NpidWcS5ts1eq0q+UmFudhXP8yjmc9Q2ZlkqtHBdD8+9eXmffFcrC7PUze1tcGwL29n+jbe3
      65PyOszOzWGa5vY2WS0c19v5Pr1PCceR3BfIMUtcmM5iWyb1apGZK1dIjJ3BLBdQ8ZidniZk
      +NDjKYpbmxTLdVKxADYqnuIjnYxjm03WVhdxFB+NYhFF1wgE/DieiiY8nFaNYk0wf2UNRYHT
      Tz/OrkfMwmP6ymWUVhF/yGVhbpqyqZIIaAQ0jdz6EmYgQX5rC8dqsjx/FUWPUW/UcTyPyYkR
      XMel0XLwrCbT83No0QRuvUo81cv6ygpGMMj6yjKq5xDp6SG7XiQZC9Kb6WcjW6I3FSe3tojj
      WlRMA3/Qx7nTk9eLaNe5eHkep2HS06wzf+UKvvgAtKr4VZWl2Wm64t1UmlAtFbhSbxCNRGgJ
      BdcRDA+kaJYKCM1HrbTF7NRV+scfobBVJN2bZHl5mWhQY26liCoc/H4FoQQRns1gMkyFKPGw
      nysX3ic9fAKzvIHrCiL9Y2SSN9/CZWNlnqrlYbYEhY01ri6scu74IHk3gmvWmJlbQnebxKMa
      m9lVylkbnzBRgVBqiFjIz9yVj+jqGwGzzurKEgio1+ooqHTFfNiegdB0uv0eSzmToGKyvFAF
      LU6tUUFRdYKKjWpo+MJpRgeTd9wXj6QGcBplon0jdEdCrGc3GBpM0TRtHNfBbFSoNF00tu80
      keztJxr00WjZjI6N4bSaoCioPj8jI8N4rTq1hk0sFsND59TkCXQNhHBxXY9YvJe+7ih3Pjjx
      cBWDTH+KRnUL/HF0XFzHQeCysZHH7zdwXAd/KMrIUJpqpUJ3qp+woSEUBSMYJtnTQ7mQIzUw
      gNOqoxoRBvv76I4nSHSF0QMRMj1RqhZMPHKS0dEBzr9znt50L8q17RkaGqQn1U/I0LEtC9ex
      cTyB26oR6E6T7I6ytrZGenAQp2XhOA6OZbJVqmPoCq7rEY0n6U1EKVXqDI+MoQgbRVEIhSOk
      envZym2R6eumWq0QTWXoTfWQTCYJqh7Rnn5iQQ1bCXBycoK+mMFHCwXS3UEUReH48RNsbWQp
      lWsEIxECmoJl2ViWtXMYVqmZjI2N4Pdp5IplEl3h7XJ6gvLWJp7mw3UdUGBgeBRd8XAVnbGh
      XupNC0WBieMnKG9sIIwgo6NjqG6DesuhqyuKUHVGRkdQFY9K1eTc2Un84Rij48O0KmUsF6LR
      CLoRYmRkGD7latCBngTfiRAeywtzKEaUWFChUK7Tkx4E10JVFHyqoGF6BCIhsouzBLp66Yn5
      mV9cZWBkjLBfp1baYi1XYnh0jGp+naopSKUSREIhGvUqfr+BaYMiBBoevnCY3c9IBMXcBoVK
      jfTgMBsri4S6e4gYOrqmooUCNCoNVBVa9QrFhsvEWIb15SXUYIx0KoEQglqthk/1WMnm6elN
      4zXL1GyVRFin3BIEVZuyKRjsjYNqoAqbC1dmeOzsGRQFGvU6hqHTshUQNo7tEPCBa8QI6bC6
      vICNQW8izNpGgZ7eNCouuqoS8GuUaxaG4aeYW8XzhRnqTzI/O0e8b4h4NIhrmZieilUtUK43
      6e0forixjC+SRGlV0MJxWuUcwh+lKxwgHA7TrG4xu1rjzOQoQgjWlufBiJKM+FhayzE4PIzT
      shDCo6u7CwVwrTqzC2skU2mcZpGGo5LpjWPiQ3VdPMcCRcVvKMwvrtGXGUa3a2QLdcZGh9FU
      hezqEi0Meruj+INBmqZJvZynZimkU3H8gSDNWoX19SxaMEZfsotg0IdpCopba3h6iERXhGDQ
      j9lyCAV3b5RVFEU5kgBIYJl1HHyEAsZRF+WOapUygUgM/VPuAfSgkgGQOtqBXwaVpPudDIDU
      0WQApI4mAyB1NBkAqaPJAEgdTQZA6mgyAFJHkwGQOpoMgNTRbusOXVif52fvX0IPRHj++eeY
      +fgdRk49TTzsu+uFNhsNAqHQziQ+wnO48P47LKzn6Rs+zlOPTvIAzLAjdYCbawC3wfdf/Smf
      e+HzPHYiQ7VhUdjaxHK2Zy78pNOQEB72DTPwbQ+uuP76K6+8fNMopVoxi6nH+eIXv8j6hXdY
      q5oHulGSdLdurgEUDbteZG2zyMToGD5N5bJV55UffJdURKHpH+Cl5yb45rf/koHeLhq+BC8+
      f4o//eb36O9PUXYCPDOR5Odvv41pubzw5a+SSUaJJjM8lQSrUaFsuUT9cn5u6f5wcw2g+vm9
      f/QP2Jj9iD/6+tdZztfACPNrL/1tXnzxK7i1Ilfe/SnJ0ZNkRidYm7rIlQ/eIjx4kszwGGtz
      Vxl45DGeeOIJfufv/fZNo4U2Fi7xv7/5Hb740m8SkwGQ7hM374nCQzPCfOHLL/LM+iW+/95l
      em75gKZraJqPQCDAV196ESv7MbquEwgEeOlrL20f9wsBgp25bM3yOt/90Yf8w9/9+xi6PO+W
      7h837412gz//P9/gBy+/wrf+6n2ef/IU4UgUXVMAla5YhMknf4X87AfMzEzz8eUZxs59jtry
      x8zMTPP+hauoQF/Mzw9efpVssQbAxuI0Ldfh/33/u3z7298jX28/SF2SDsttA2LEtbsgqKp6
      x4mGd96jaSi7fUYIbMdB133yao9035IjwqSOJkeESR1PBkDqaDIAUkeTAZA6mgzAEdhavMT/
      +uNv8ON3PsLb5Sa/i1c/pHRjb5Frr9cKq/zJH32dP/nmt6g0b79/6PZb5TWNeyGbZI9AZWOJ
      U8+/SOH8K3xotJibX2VgaIhG3SWs1tGwMI04r7//LqdOTXLh/fMce+JXeGJymMdGu/Gd+XU+
      +OnrnDl3ho8/nmMluw5C44nTGa7OrzEy+TTnHhk86s18IMga4Ih4rotQFK588CGWqlJreFRy
      c6zl64h6kZmrUxx/8vMkRInlikm1WLzp8xMDMf74G98nMzZIfOAYvX6Lt37xEa5QqVQKR7RV
      Dx4ZgCPQlR5l8aM36Rp7jK997SvEdIN0X4qzE2OMnnyU/rFJnnz6KbIX36YaHODR0X76+rbv
      cJwafoRESCV9/DH8foOhLj+zl86jpI7x61/+AsFgkL7UrR1YpDs50Iaw3ab2kfbHxtI0ppEk
      EzdYzjcYHeg96iI9cA60JfiTOcLkhHnS/UJVb54nWlEUZc8nwW6rytxaheHeCDMLKwyNHccs
      rVOse0xMjO1MR3O/zxv1sFnIlnjr43ufmfHFz56gO7L7bcQfZnsLgBDMzC3TtAVLrQrHTxxj
      dm4O4Wqk4wa5Yp10IrzPRZXuxvJmmT//0aV7/tznzg53ZAD2dHxSzi1TbQkKhQK2q6DrOopw
      UFUfPp+xPQOIJD0A9hSAWGqIz5ydZHR4iHQyzKVLV4gmMujUWczmSXZHP30hknQf2NMhkKIo
      aJrG+PgoAPG+DIqiIFJdO69L0oNgX1qCP9nh5Y4vPWjaHgIJ1+Inf/0Gm4WK7GMiPZTa1gCK
      6mNyYpj/+V/+A6ljj/LSiy/SFw9htxrMzS/i4GMwGWJxLUdfZoxmYYVqU/DIqVP4dVkbSPe/
      tgEQnsPlmUV+75//AT1hhVJz++qOzx8iFvKzWbHZzFc5c/Y0M9NTIEKM9hvkS1X64mFc15U1
      xyFz3TvPiNz+cy6O83Bfvbu1IQw+JQCeazN99RKr65s89sznOTU+sP2855EayJDLXcBSAnje
      9qTWwnNwXRXFt70iIYRsCDtk2h5b3lVN68jfqk0AXH725huUGh7pTAzDuP5Wx6wxv7xOsLuH
      wVSEmelZ0plxmqUsuZrDsfEwiqLs/C8doj1+3QqdeRGjTQBUzj39PAPHz5KMR6jUrlePRijG
      I4/Edh6fjCUAiEdHD6qcknQg2gRAIbt4le+9+R6nJwZRo2MMDfYdXskk6RC0PQRqmC7HRkeI
      xBKMnhg5vFJJ0iFpc8akEI0nSUT8bG5uUG+0Dq9UknRI2gRAZXg4w+LMRSxFYXF5/fBKJUmH
      pO1lUFU3ePz5L7E8c5WuWGTnedc2mZmZAyNMJhlidmmdwdEJmoU1Sg2XyckT6GrnXVGQHjzt
      G8KEQMElM34GX+D6WxXNIDOYZmklz9KGyenTJ5mZmUEIP0M9QXLFGr3dIdkQdgRkQ9id3XND
      mPAcPjz/DlvZBqc/9yVOTGw/75lVZpa3OHPqOLOXL2G7Nq6n4LkWliVQw3E5IuyIaNreGsI0
      TUPXO+8uOe0PgXxBHjv7GTaHmhwfv36fGU9R8asuc3NLjB0bZX5hlbFjxzHLOcqmx0h38MAL
      Lkn7oX1XCKvB+UszPPXEEwT912eJNIJRJk+e3Hl84sRxAIKpNPEDKqgkHYQ29aXD66+8TL1a
      5d1332V9q3x4pZKkQ9ImADq/+tJv0BPzH15pJOmQtT/r8RxcLcyzTz9OvKf7kIokSYen7SWD
      cqVCLKTz8cXL1JpyYjvp4dO2BsiurhCIxKGe5/LUEpne7VpAuBZXPnqX2NiThFqbLGXzpAZG
      aBZWqJmCR06fJiCnQ5UeAG0DoPt0fD4frgqNGxtYFJ1MX4INW9Ao1Tn76Gmmp66CiDA+6KdQ
      qskRYUdENoTd2T03hHXFe9CDNr6RcQYHrneFVlQV/VqDi7h2D1DXU8GzsW0FxR+TDWFHRDaE
      3Zu2W9zbn9n1eafVYDHXxNaXGcsMMDszz+DwOGZpg3zTYzwdOpDCStJ+21PkdX+IyTOP7Tye
      jG2fG3SFh5FDZqQHiTxTlTqaDIDU0WQApI4mAyB1tAfuulel3rrntgXDp93UmxWgblo4zr1d
      M1dVhWhI9o06Kgfxmx1YADzPw/P21ijTzr//07+hbt5bt4znTg/xm58/edNz33jtIy4t5u5p
      OYM9Uf7F3/3sPX3msIX8OmP9Xff8OV1TcN3dJ9++X/zZ6x9zYX7znj6TTkT4l7/zHLDdEHbr
      zb8ObJI8IQSu6+5LQ9gnk+39sncuE0Lged6+lUkup/1y7sff7MbGvgOdJRL2b5rUT4q4H1/m
      fiznk2XJ5bRfDtzfv5miKMqBngQrioIQLpcvX0EAhUL+k6KwtbUFrsn80jpWvULVtNsuZ7cv
      YH15nqmZBQoba+QrDUr5PI7wWJqbZmZhZffl4DE/c5X5X/I2L4qikF1dYn5+EdPe+6HD9nZ5
      lIpl8Gy2CqU9L6daLnK3h8hCeCzMTjG3tLZLeQDPpliu7aksO+XZ2mCzVEMIj5nZuZtebzQa
      Nz3ObazSqpe5MjXL0uoGn/xZ3v7NBIuz00xNz+2+fZ5Nw7SplQuYtsfywjyOgHw+f9PbdtuH
      DvwkuJFfpVwzKTcdWmaL0tY6axtVhGLjNStkiya6UyUWj/PhTJ6+ZJStQpm+gSFS8TZzjbWK
      bDV0zpzIsDQ1TTFfJuR5OJg4/gTHBhK7fqyQXcboHmAgGWFjdZFcscrQUIallVVQDVLxCD3J
      OPl8iXx+i2AsgV+Dnu4wVcsgecN452rD5NixCVrlPLVoimpuHdwWtZaCJkzqjRaj4xOsry1h
      BLsJqi0qTY9oUKNQrjE0dpxo0Ad4rK+uoys9rGyUqBWymK6P4UyKpcUVtGCCgYEk1cImHjqx
      gIIIJokGbj4sKBZyGOE4wqoxt7BMNJGiUcyhhbqJaDabxQoDmWGyK0tEgjpEMoz13mE2T2GT
      y5eJd4XJriySq1iMpGMsZ4sMDY+wujiLP9ZDULWpmR4T46Pcun/ViiU2qBF2/Cxv1eiJrbOa
      K5JK9XL18iUePfc4hdwajhpEbZUIqC5GIkN9cwavvxft2gKF3WCrZnNmcoRmKcdyNkcwGsfw
      GhSrJumeEJfmy0wOx2maCrnVeYxIlEKxSTKZbLt/Hvhl0NmFVXTRYHklSyGfp1LK0z82Tl9X
      kPmtJiNRH5sNj6BooHelKeSyBAMG+Xyx/YI9G9UX2E61ojLYE2U1V8ZzHHSfcccq03FdfD4f
      iqJQqNQ5eWKMjZV5/N1p/LqC16wxP79AvV6j6aqUSiVa1RLT86uEojdPI2o1qiwtrVAt5Wm6
      sFXYolgsMzY2jCM0RjIpyltF0Ay28psUqg2OT4yxuraGoasUiteHmZqNGsViEdczWVstYrdq
      5AoVDL9OvbLB0sIClYZHuZBjOZsn5L/zMbHZaKAZATY3N1EVBdu2WV5dJRTQWF/OoofiRP0q
      Pv+dv6cdwqPZcqgXClgogKCaX6FoapSLBQqlMqOjI7ft/Ns0grpgPtdkIBlkeWmFgKFTblj0
      96cJ+1VcoVLI53bWNXv1EoFoEvXGQxUjwiOjaS5f+JBcucHg6ASNao5K3WZiOE21aZEeyJBK
      91FZvkR86DRL01Mk073tt40DD4Ag3jfEk099lu4ARGMxwrEEIb9OdyKF39BJpnvwqT40I0RP
      V5iB/n4s2yWR6CaXy1HcymHvVu0FU/ia61y8OoM/HKY7NUg0oNKV7Ke2MceVmcVdS9TTN8Dm
      4lWm55eJBg2mZxdI9mWIBAwikTD9Q4OUag4jmX4CGsS74wyPDlKsWvjsOsVqg1xuC4BEbz+j
      o8N0JbpZm5kC1U+8J4WuKkQiYXRfAF11sWybcChCNOBjZm6Rvt5eXFTiO7NpKlHnC+8AAAEh
      SURBVKQzQwwNDdPT3UNvb4xAOIYubBxXEEukEY0S/UODjA10UbH9WNUitaZF7oZq3tA1Zqav
      UqrWsG2XaCSM7jOwrRb9fX20HI3edJJEPEasb4Ti4iWm5pbJ53I0awUqzRu7Q2s0yzkWV7KY
      LRN/KISuahiaAH+CLr9HdzxBPNGDT1PI5XI0ykXq1vVlBCIRBnt70IwA0XCE/oE+bBeS3d0I
      16JQqtBqtQiGIoSjMXR/mEcfPcPYUJpKIYfZrJOvNPAci5XVNVQjhKE4zE9PEYr2EjQU5ley
      JPsy2JUsdUvDUwIMZ1IY/gDxkI9cbovcVu6Ol84P9CT4YbG1togaS5OIHH0bwMrCDInBcUK+
      zmzDrJYK6KEYQeOXP3pXFEX5/7ARHNMV746FAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
